╔══════════════════════════════════════════════════════════════════════════════╗
║                    TELEGRAM EXCHANGE BOT - PROJECT STRUCTURE                 ║
╚══════════════════════════════════════════════════════════════════════════════╝

📦 telegram-exchange-bot/
│
├── 🚀 main.py                          # Application entry point
│
├── 📁 app/                             # Main application package
│   ├── 🤖 bot.py                       # Main bot class (ExchangeBot)
│   │
│   ├── ⚙️  config/                     # Configuration layer
│   │   ├── __init__.py
│   │   └── settings.py                 # Config class with validation
│   │
│   ├── 🎯 handlers/                    # Request handling layer
│   │   ├── __init__.py
│   │   ├── user_handlers.py            # User interaction handlers
│   │   └── admin_handlers.py           # Admin operation handlers
│   │
│   ├── 🔧 services/                    # Business logic layer
│   │   ├── __init__.py
│   │   ├── database_service.py         # Database operations (SQLite)
│   │   └── ocr_service.py              # OCR processing (Mistral AI)
│   │
│   └── 🛠️  utils/                      # Utility functions
│       ├── __init__.py
│       ├── validators.py               # Input validation helpers
│       └── formatters.py               # Output formatting helpers
│
├── 🧪 test_imports.py                  # Comprehensive test suite
├── 🔨 setup.sh                         # Automated setup script
│
├── 📋 requirements.txt                 # Python dependencies
├── 🔐 .env                             # Environment variables (DO NOT COMMIT)
├── 📄 .env.example                     # Environment template
├── 🚫 .gitignore                       # Git ignore rules
│
├── 📚 Documentation Files
│   ├── README.md                       # Main documentation
│   ├── QUICKSTART.md                   # 5-minute setup guide
│   ├── ARCHITECTURE.md                 # Technical architecture
│   ├── DEVELOPMENT.md                  # Developer guide
│   ├── BUSINESS_BOT_FLOW.md            # Business logic flow
│   └── PROJECT_SUMMARY.md              # Project overview
│
└── 💾 Generated at Runtime
    ├── receipts/                       # User receipt uploads
    ├── admin_receipts/                 # Admin receipt uploads
    ├── exchange_bot.db                 # SQLite database
    └── logs/                           # Application logs

╔══════════════════════════════════════════════════════════════════════════════╗
║                              COMPONENT DIAGRAM                               ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────────┐
│                              TELEGRAM USER                                   │
└────────────────────────────┬────────────────────────────────────────────────┘
                             │
                             ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                          USER HANDLERS LAYER                                 │
│  ┌──────────────────────────────────────────────────────────────────────┐  │
│  │  • /start command          • Receipt upload                          │  │
│  │  • Exchange flow           • Amount validation                       │  │
│  │  • Bank info collection    • Transaction creation                    │  │
│  └──────────────────────────────────────────────────────────────────────┘  │
└────────────────────────────┬────────────────────────────────────────────────┘
                             │
                             ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                          SERVICES LAYER                                      │
│  ┌─────────────────────────┐         ┌─────────────────────────────────┐   │
│  │   DATABASE SERVICE      │         │      OCR SERVICE                │   │
│  │  • CRUD operations      │         │  • Image processing             │   │
│  │  • Balance tracking     │         │  • Mistral AI Vision            │   │
│  │  • Transaction mgmt     │         │  • Data extraction              │   │
│  └─────────────────────────┘         └─────────────────────────────────┘   │
└────────────────────────────┬────────────────────────────────────────────────┘
                             │
                             ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                          DATA LAYER                                          │
│  ┌─────────────────────────┐         ┌─────────────────────────────────┐   │
│  │   SQLite DATABASE       │         │   MISTRAL AI API                │   │
│  │  • balances             │         │  • Vision model                 │   │
│  │  • transactions         │         │  • Receipt OCR                  │   │
│  │  • exchange_rate        │         │                                 │   │
│  └─────────────────────────┘         └─────────────────────────────────┘   │
└─────────────────────────────────────────────────────────────────────────────┘
                             │
                             ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                          ADMIN HANDLERS LAYER                                │
│  ┌──────────────────────────────────────────────────────────────────────┐  │
│  │  • Transaction verification    • Balance management                  │  │
│  │  • Receipt validation          • Rate updates                        │  │
│  │  • Manual confirmation         • Transaction reports                 │  │
│  └──────────────────────────────────────────────────────────────────────┘  │
└────────────────────────────┬────────────────────────────────────────────────┘
                             │
                             ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                          TELEGRAM ADMIN GROUP                                │
└─────────────────────────────────────────────────────────────────────────────┘

╔══════════════════════════════════════════════════════════════════════════════╗
║                              DATA FLOW                                       ║
╚══════════════════════════════════════════════════════════════════════════════╝

USER EXCHANGE FLOW:
1. User → /start → Welcome Message
2. User → Click "Exchange" → Request Receipt
3. User → Upload Receipt → OCR Processing
4. User → Enter Bank Info → Create Transaction
5. System → Update THB Balance → Notify Admin
6. Admin → Verify → Update MMK Balance
7. System → Notify User → Complete

ADMIN VERIFICATION FLOW:
1. Admin → Receive Notification → Review Details
2. Admin → Upload Receipt (optional) → OCR Verify
3. Admin → Select Bank → Confirm Transfer
4. System → Update Balances → Update Status
5. System → Notify User → Transaction Complete

╔══════════════════════════════════════════════════════════════════════════════╗
║                          DATABASE SCHEMA                                     ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────┐
│   exchange_rate         │
├─────────────────────────┤
│ id (PK)                 │
│ rate                    │
│ updated_at              │
└─────────────────────────┘

┌─────────────────────────┐
│   balances              │
├─────────────────────────┤
│ id (PK)                 │
│ currency                │
│ bank                    │
│ balance                 │
│ updated_at              │
│ UNIQUE(currency, bank)  │
└─────────────────────────┘

┌─────────────────────────┐
│   transactions          │
├─────────────────────────┤
│ id (PK)                 │
│ user_id                 │
│ username                │
│ receipt_path            │
│ from_bank               │
│ to_bank                 │
│ thb_amount              │
│ mmk_amount              │
│ rate                    │
│ user_bank_name          │
│ user_account_number     │
│ user_account_name       │
│ admin_bank              │
│ status                  │
│ transaction_ref         │
│ created_at              │
│ confirmed_at            │
└─────────────────────────┘

╔══════════════════════════════════════════════════════════════════════════════╗
║                          KEY FEATURES                                        ║
╚══════════════════════════════════════════════════════════════════════════════╝

✅ OOP Design with Clean Architecture
✅ Separation of Concerns (Config/Services/Handlers/Utils)
✅ Comprehensive Error Handling
✅ Logging Throughout
✅ Type Hints for Better IDE Support
✅ Docstrings for All Classes/Methods
✅ Test Suite Included
✅ Production-Ready Code
✅ Extensive Documentation
✅ Easy to Maintain and Extend

╔══════════════════════════════════════════════════════════════════════════════╗
║                          QUICK START                                         ║
╚══════════════════════════════════════════════════════════════════════════════╝

1. Install:     pip install -r requirements.txt
2. Configure:   Edit .env file with your credentials
3. Test:        python test_imports.py
4. Run:         python main.py

For detailed instructions, see QUICKSTART.md

╔══════════════════════════════════════════════════════════════════════════════╗
║                    STATUS: ✅ COMPLETE AND READY TO RUN                      ║
╚══════════════════════════════════════════════════════════════════════════════╝
